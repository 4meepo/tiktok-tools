// Code generated by ent, DO NOT EDIT.

package tiktokcreator

import (
	"entgo.io/ent/dialect/sql"
	"github.com/4meepo/tiktok-tools/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldID), id))
	})
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldID), id))
	})
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.NEQ(s.C(FieldID), id))
	})
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		v := make([]any, len(ids))
		for i := range v {
			v[i] = ids[i]
		}
		s.Where(sql.In(s.C(FieldID), v...))
	})
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		v := make([]any, len(ids))
		for i := range v {
			v[i] = ids[i]
		}
		s.Where(sql.NotIn(s.C(FieldID), v...))
	})
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.GT(s.C(FieldID), id))
	})
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.GTE(s.C(FieldID), id))
	})
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.LT(s.C(FieldID), id))
	})
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.LTE(s.C(FieldID), id))
	})
}

// CreatorID applies equality check predicate on the "creator_id" field. It's identical to CreatorIDEQ.
func CreatorID(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldCreatorID), v))
	})
}

// CreatorName applies equality check predicate on the "creator_name" field. It's identical to CreatorNameEQ.
func CreatorName(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldCreatorName), v))
	})
}

// CreatorNickname applies equality check predicate on the "creator_nickname" field. It's identical to CreatorNicknameEQ.
func CreatorNickname(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldCreatorNickname), v))
	})
}

// Region applies equality check predicate on the "region" field. It's identical to RegionEQ.
func Region(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldRegion), v))
	})
}

// FollowerCount applies equality check predicate on the "follower_count" field. It's identical to FollowerCountEQ.
func FollowerCount(v uint32) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldFollowerCount), v))
	})
}

// VideoAvgViewCnt applies equality check predicate on the "video_avg_view_cnt" field. It's identical to VideoAvgViewCntEQ.
func VideoAvgViewCnt(v uint32) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldVideoAvgViewCnt), v))
	})
}

// VideoPubCnt applies equality check predicate on the "video_pub_cnt" field. It's identical to VideoPubCntEQ.
func VideoPubCnt(v uint32) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldVideoPubCnt), v))
	})
}

// EcVideoAvgViewCnt applies equality check predicate on the "ec_video_avg_view_cnt" field. It's identical to EcVideoAvgViewCntEQ.
func EcVideoAvgViewCnt(v uint32) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldEcVideoAvgViewCnt), v))
	})
}

// CreatorOecuid applies equality check predicate on the "creator_oecuid" field. It's identical to CreatorOecuidEQ.
func CreatorOecuid(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldCreatorOecuid), v))
	})
}

// CreatorTtuid applies equality check predicate on the "creator_ttuid" field. It's identical to CreatorTtuidEQ.
func CreatorTtuid(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldCreatorTtuid), v))
	})
}

// CreatorIDEQ applies the EQ predicate on the "creator_id" field.
func CreatorIDEQ(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldCreatorID), v))
	})
}

// CreatorIDNEQ applies the NEQ predicate on the "creator_id" field.
func CreatorIDNEQ(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.NEQ(s.C(FieldCreatorID), v))
	})
}

// CreatorIDIn applies the In predicate on the "creator_id" field.
func CreatorIDIn(vs ...string) predicate.TiktokCreator {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.In(s.C(FieldCreatorID), v...))
	})
}

// CreatorIDNotIn applies the NotIn predicate on the "creator_id" field.
func CreatorIDNotIn(vs ...string) predicate.TiktokCreator {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.NotIn(s.C(FieldCreatorID), v...))
	})
}

// CreatorIDGT applies the GT predicate on the "creator_id" field.
func CreatorIDGT(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.GT(s.C(FieldCreatorID), v))
	})
}

// CreatorIDGTE applies the GTE predicate on the "creator_id" field.
func CreatorIDGTE(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.GTE(s.C(FieldCreatorID), v))
	})
}

// CreatorIDLT applies the LT predicate on the "creator_id" field.
func CreatorIDLT(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.LT(s.C(FieldCreatorID), v))
	})
}

// CreatorIDLTE applies the LTE predicate on the "creator_id" field.
func CreatorIDLTE(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.LTE(s.C(FieldCreatorID), v))
	})
}

// CreatorIDContains applies the Contains predicate on the "creator_id" field.
func CreatorIDContains(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.Contains(s.C(FieldCreatorID), v))
	})
}

// CreatorIDHasPrefix applies the HasPrefix predicate on the "creator_id" field.
func CreatorIDHasPrefix(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.HasPrefix(s.C(FieldCreatorID), v))
	})
}

// CreatorIDHasSuffix applies the HasSuffix predicate on the "creator_id" field.
func CreatorIDHasSuffix(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.HasSuffix(s.C(FieldCreatorID), v))
	})
}

// CreatorIDEqualFold applies the EqualFold predicate on the "creator_id" field.
func CreatorIDEqualFold(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.EqualFold(s.C(FieldCreatorID), v))
	})
}

// CreatorIDContainsFold applies the ContainsFold predicate on the "creator_id" field.
func CreatorIDContainsFold(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.ContainsFold(s.C(FieldCreatorID), v))
	})
}

// CreatorNameEQ applies the EQ predicate on the "creator_name" field.
func CreatorNameEQ(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldCreatorName), v))
	})
}

// CreatorNameNEQ applies the NEQ predicate on the "creator_name" field.
func CreatorNameNEQ(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.NEQ(s.C(FieldCreatorName), v))
	})
}

// CreatorNameIn applies the In predicate on the "creator_name" field.
func CreatorNameIn(vs ...string) predicate.TiktokCreator {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.In(s.C(FieldCreatorName), v...))
	})
}

// CreatorNameNotIn applies the NotIn predicate on the "creator_name" field.
func CreatorNameNotIn(vs ...string) predicate.TiktokCreator {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.NotIn(s.C(FieldCreatorName), v...))
	})
}

// CreatorNameGT applies the GT predicate on the "creator_name" field.
func CreatorNameGT(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.GT(s.C(FieldCreatorName), v))
	})
}

// CreatorNameGTE applies the GTE predicate on the "creator_name" field.
func CreatorNameGTE(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.GTE(s.C(FieldCreatorName), v))
	})
}

// CreatorNameLT applies the LT predicate on the "creator_name" field.
func CreatorNameLT(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.LT(s.C(FieldCreatorName), v))
	})
}

// CreatorNameLTE applies the LTE predicate on the "creator_name" field.
func CreatorNameLTE(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.LTE(s.C(FieldCreatorName), v))
	})
}

// CreatorNameContains applies the Contains predicate on the "creator_name" field.
func CreatorNameContains(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.Contains(s.C(FieldCreatorName), v))
	})
}

// CreatorNameHasPrefix applies the HasPrefix predicate on the "creator_name" field.
func CreatorNameHasPrefix(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.HasPrefix(s.C(FieldCreatorName), v))
	})
}

// CreatorNameHasSuffix applies the HasSuffix predicate on the "creator_name" field.
func CreatorNameHasSuffix(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.HasSuffix(s.C(FieldCreatorName), v))
	})
}

// CreatorNameEqualFold applies the EqualFold predicate on the "creator_name" field.
func CreatorNameEqualFold(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.EqualFold(s.C(FieldCreatorName), v))
	})
}

// CreatorNameContainsFold applies the ContainsFold predicate on the "creator_name" field.
func CreatorNameContainsFold(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.ContainsFold(s.C(FieldCreatorName), v))
	})
}

// CreatorNicknameEQ applies the EQ predicate on the "creator_nickname" field.
func CreatorNicknameEQ(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldCreatorNickname), v))
	})
}

// CreatorNicknameNEQ applies the NEQ predicate on the "creator_nickname" field.
func CreatorNicknameNEQ(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.NEQ(s.C(FieldCreatorNickname), v))
	})
}

// CreatorNicknameIn applies the In predicate on the "creator_nickname" field.
func CreatorNicknameIn(vs ...string) predicate.TiktokCreator {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.In(s.C(FieldCreatorNickname), v...))
	})
}

// CreatorNicknameNotIn applies the NotIn predicate on the "creator_nickname" field.
func CreatorNicknameNotIn(vs ...string) predicate.TiktokCreator {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.NotIn(s.C(FieldCreatorNickname), v...))
	})
}

// CreatorNicknameGT applies the GT predicate on the "creator_nickname" field.
func CreatorNicknameGT(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.GT(s.C(FieldCreatorNickname), v))
	})
}

// CreatorNicknameGTE applies the GTE predicate on the "creator_nickname" field.
func CreatorNicknameGTE(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.GTE(s.C(FieldCreatorNickname), v))
	})
}

// CreatorNicknameLT applies the LT predicate on the "creator_nickname" field.
func CreatorNicknameLT(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.LT(s.C(FieldCreatorNickname), v))
	})
}

// CreatorNicknameLTE applies the LTE predicate on the "creator_nickname" field.
func CreatorNicknameLTE(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.LTE(s.C(FieldCreatorNickname), v))
	})
}

// CreatorNicknameContains applies the Contains predicate on the "creator_nickname" field.
func CreatorNicknameContains(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.Contains(s.C(FieldCreatorNickname), v))
	})
}

// CreatorNicknameHasPrefix applies the HasPrefix predicate on the "creator_nickname" field.
func CreatorNicknameHasPrefix(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.HasPrefix(s.C(FieldCreatorNickname), v))
	})
}

// CreatorNicknameHasSuffix applies the HasSuffix predicate on the "creator_nickname" field.
func CreatorNicknameHasSuffix(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.HasSuffix(s.C(FieldCreatorNickname), v))
	})
}

// CreatorNicknameEqualFold applies the EqualFold predicate on the "creator_nickname" field.
func CreatorNicknameEqualFold(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.EqualFold(s.C(FieldCreatorNickname), v))
	})
}

// CreatorNicknameContainsFold applies the ContainsFold predicate on the "creator_nickname" field.
func CreatorNicknameContainsFold(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.ContainsFold(s.C(FieldCreatorNickname), v))
	})
}

// RegionEQ applies the EQ predicate on the "region" field.
func RegionEQ(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldRegion), v))
	})
}

// RegionNEQ applies the NEQ predicate on the "region" field.
func RegionNEQ(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.NEQ(s.C(FieldRegion), v))
	})
}

// RegionIn applies the In predicate on the "region" field.
func RegionIn(vs ...string) predicate.TiktokCreator {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.In(s.C(FieldRegion), v...))
	})
}

// RegionNotIn applies the NotIn predicate on the "region" field.
func RegionNotIn(vs ...string) predicate.TiktokCreator {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.NotIn(s.C(FieldRegion), v...))
	})
}

// RegionGT applies the GT predicate on the "region" field.
func RegionGT(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.GT(s.C(FieldRegion), v))
	})
}

// RegionGTE applies the GTE predicate on the "region" field.
func RegionGTE(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.GTE(s.C(FieldRegion), v))
	})
}

// RegionLT applies the LT predicate on the "region" field.
func RegionLT(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.LT(s.C(FieldRegion), v))
	})
}

// RegionLTE applies the LTE predicate on the "region" field.
func RegionLTE(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.LTE(s.C(FieldRegion), v))
	})
}

// RegionContains applies the Contains predicate on the "region" field.
func RegionContains(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.Contains(s.C(FieldRegion), v))
	})
}

// RegionHasPrefix applies the HasPrefix predicate on the "region" field.
func RegionHasPrefix(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.HasPrefix(s.C(FieldRegion), v))
	})
}

// RegionHasSuffix applies the HasSuffix predicate on the "region" field.
func RegionHasSuffix(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.HasSuffix(s.C(FieldRegion), v))
	})
}

// RegionEqualFold applies the EqualFold predicate on the "region" field.
func RegionEqualFold(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.EqualFold(s.C(FieldRegion), v))
	})
}

// RegionContainsFold applies the ContainsFold predicate on the "region" field.
func RegionContainsFold(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.ContainsFold(s.C(FieldRegion), v))
	})
}

// FollowerCountEQ applies the EQ predicate on the "follower_count" field.
func FollowerCountEQ(v uint32) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldFollowerCount), v))
	})
}

// FollowerCountNEQ applies the NEQ predicate on the "follower_count" field.
func FollowerCountNEQ(v uint32) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.NEQ(s.C(FieldFollowerCount), v))
	})
}

// FollowerCountIn applies the In predicate on the "follower_count" field.
func FollowerCountIn(vs ...uint32) predicate.TiktokCreator {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.In(s.C(FieldFollowerCount), v...))
	})
}

// FollowerCountNotIn applies the NotIn predicate on the "follower_count" field.
func FollowerCountNotIn(vs ...uint32) predicate.TiktokCreator {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.NotIn(s.C(FieldFollowerCount), v...))
	})
}

// FollowerCountGT applies the GT predicate on the "follower_count" field.
func FollowerCountGT(v uint32) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.GT(s.C(FieldFollowerCount), v))
	})
}

// FollowerCountGTE applies the GTE predicate on the "follower_count" field.
func FollowerCountGTE(v uint32) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.GTE(s.C(FieldFollowerCount), v))
	})
}

// FollowerCountLT applies the LT predicate on the "follower_count" field.
func FollowerCountLT(v uint32) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.LT(s.C(FieldFollowerCount), v))
	})
}

// FollowerCountLTE applies the LTE predicate on the "follower_count" field.
func FollowerCountLTE(v uint32) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.LTE(s.C(FieldFollowerCount), v))
	})
}

// VideoAvgViewCntEQ applies the EQ predicate on the "video_avg_view_cnt" field.
func VideoAvgViewCntEQ(v uint32) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldVideoAvgViewCnt), v))
	})
}

// VideoAvgViewCntNEQ applies the NEQ predicate on the "video_avg_view_cnt" field.
func VideoAvgViewCntNEQ(v uint32) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.NEQ(s.C(FieldVideoAvgViewCnt), v))
	})
}

// VideoAvgViewCntIn applies the In predicate on the "video_avg_view_cnt" field.
func VideoAvgViewCntIn(vs ...uint32) predicate.TiktokCreator {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.In(s.C(FieldVideoAvgViewCnt), v...))
	})
}

// VideoAvgViewCntNotIn applies the NotIn predicate on the "video_avg_view_cnt" field.
func VideoAvgViewCntNotIn(vs ...uint32) predicate.TiktokCreator {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.NotIn(s.C(FieldVideoAvgViewCnt), v...))
	})
}

// VideoAvgViewCntGT applies the GT predicate on the "video_avg_view_cnt" field.
func VideoAvgViewCntGT(v uint32) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.GT(s.C(FieldVideoAvgViewCnt), v))
	})
}

// VideoAvgViewCntGTE applies the GTE predicate on the "video_avg_view_cnt" field.
func VideoAvgViewCntGTE(v uint32) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.GTE(s.C(FieldVideoAvgViewCnt), v))
	})
}

// VideoAvgViewCntLT applies the LT predicate on the "video_avg_view_cnt" field.
func VideoAvgViewCntLT(v uint32) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.LT(s.C(FieldVideoAvgViewCnt), v))
	})
}

// VideoAvgViewCntLTE applies the LTE predicate on the "video_avg_view_cnt" field.
func VideoAvgViewCntLTE(v uint32) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.LTE(s.C(FieldVideoAvgViewCnt), v))
	})
}

// VideoPubCntEQ applies the EQ predicate on the "video_pub_cnt" field.
func VideoPubCntEQ(v uint32) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldVideoPubCnt), v))
	})
}

// VideoPubCntNEQ applies the NEQ predicate on the "video_pub_cnt" field.
func VideoPubCntNEQ(v uint32) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.NEQ(s.C(FieldVideoPubCnt), v))
	})
}

// VideoPubCntIn applies the In predicate on the "video_pub_cnt" field.
func VideoPubCntIn(vs ...uint32) predicate.TiktokCreator {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.In(s.C(FieldVideoPubCnt), v...))
	})
}

// VideoPubCntNotIn applies the NotIn predicate on the "video_pub_cnt" field.
func VideoPubCntNotIn(vs ...uint32) predicate.TiktokCreator {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.NotIn(s.C(FieldVideoPubCnt), v...))
	})
}

// VideoPubCntGT applies the GT predicate on the "video_pub_cnt" field.
func VideoPubCntGT(v uint32) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.GT(s.C(FieldVideoPubCnt), v))
	})
}

// VideoPubCntGTE applies the GTE predicate on the "video_pub_cnt" field.
func VideoPubCntGTE(v uint32) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.GTE(s.C(FieldVideoPubCnt), v))
	})
}

// VideoPubCntLT applies the LT predicate on the "video_pub_cnt" field.
func VideoPubCntLT(v uint32) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.LT(s.C(FieldVideoPubCnt), v))
	})
}

// VideoPubCntLTE applies the LTE predicate on the "video_pub_cnt" field.
func VideoPubCntLTE(v uint32) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.LTE(s.C(FieldVideoPubCnt), v))
	})
}

// EcVideoAvgViewCntEQ applies the EQ predicate on the "ec_video_avg_view_cnt" field.
func EcVideoAvgViewCntEQ(v uint32) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldEcVideoAvgViewCnt), v))
	})
}

// EcVideoAvgViewCntNEQ applies the NEQ predicate on the "ec_video_avg_view_cnt" field.
func EcVideoAvgViewCntNEQ(v uint32) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.NEQ(s.C(FieldEcVideoAvgViewCnt), v))
	})
}

// EcVideoAvgViewCntIn applies the In predicate on the "ec_video_avg_view_cnt" field.
func EcVideoAvgViewCntIn(vs ...uint32) predicate.TiktokCreator {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.In(s.C(FieldEcVideoAvgViewCnt), v...))
	})
}

// EcVideoAvgViewCntNotIn applies the NotIn predicate on the "ec_video_avg_view_cnt" field.
func EcVideoAvgViewCntNotIn(vs ...uint32) predicate.TiktokCreator {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.NotIn(s.C(FieldEcVideoAvgViewCnt), v...))
	})
}

// EcVideoAvgViewCntGT applies the GT predicate on the "ec_video_avg_view_cnt" field.
func EcVideoAvgViewCntGT(v uint32) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.GT(s.C(FieldEcVideoAvgViewCnt), v))
	})
}

// EcVideoAvgViewCntGTE applies the GTE predicate on the "ec_video_avg_view_cnt" field.
func EcVideoAvgViewCntGTE(v uint32) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.GTE(s.C(FieldEcVideoAvgViewCnt), v))
	})
}

// EcVideoAvgViewCntLT applies the LT predicate on the "ec_video_avg_view_cnt" field.
func EcVideoAvgViewCntLT(v uint32) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.LT(s.C(FieldEcVideoAvgViewCnt), v))
	})
}

// EcVideoAvgViewCntLTE applies the LTE predicate on the "ec_video_avg_view_cnt" field.
func EcVideoAvgViewCntLTE(v uint32) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.LTE(s.C(FieldEcVideoAvgViewCnt), v))
	})
}

// CreatorOecuidEQ applies the EQ predicate on the "creator_oecuid" field.
func CreatorOecuidEQ(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldCreatorOecuid), v))
	})
}

// CreatorOecuidNEQ applies the NEQ predicate on the "creator_oecuid" field.
func CreatorOecuidNEQ(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.NEQ(s.C(FieldCreatorOecuid), v))
	})
}

// CreatorOecuidIn applies the In predicate on the "creator_oecuid" field.
func CreatorOecuidIn(vs ...string) predicate.TiktokCreator {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.In(s.C(FieldCreatorOecuid), v...))
	})
}

// CreatorOecuidNotIn applies the NotIn predicate on the "creator_oecuid" field.
func CreatorOecuidNotIn(vs ...string) predicate.TiktokCreator {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.NotIn(s.C(FieldCreatorOecuid), v...))
	})
}

// CreatorOecuidGT applies the GT predicate on the "creator_oecuid" field.
func CreatorOecuidGT(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.GT(s.C(FieldCreatorOecuid), v))
	})
}

// CreatorOecuidGTE applies the GTE predicate on the "creator_oecuid" field.
func CreatorOecuidGTE(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.GTE(s.C(FieldCreatorOecuid), v))
	})
}

// CreatorOecuidLT applies the LT predicate on the "creator_oecuid" field.
func CreatorOecuidLT(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.LT(s.C(FieldCreatorOecuid), v))
	})
}

// CreatorOecuidLTE applies the LTE predicate on the "creator_oecuid" field.
func CreatorOecuidLTE(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.LTE(s.C(FieldCreatorOecuid), v))
	})
}

// CreatorOecuidContains applies the Contains predicate on the "creator_oecuid" field.
func CreatorOecuidContains(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.Contains(s.C(FieldCreatorOecuid), v))
	})
}

// CreatorOecuidHasPrefix applies the HasPrefix predicate on the "creator_oecuid" field.
func CreatorOecuidHasPrefix(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.HasPrefix(s.C(FieldCreatorOecuid), v))
	})
}

// CreatorOecuidHasSuffix applies the HasSuffix predicate on the "creator_oecuid" field.
func CreatorOecuidHasSuffix(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.HasSuffix(s.C(FieldCreatorOecuid), v))
	})
}

// CreatorOecuidEqualFold applies the EqualFold predicate on the "creator_oecuid" field.
func CreatorOecuidEqualFold(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.EqualFold(s.C(FieldCreatorOecuid), v))
	})
}

// CreatorOecuidContainsFold applies the ContainsFold predicate on the "creator_oecuid" field.
func CreatorOecuidContainsFold(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.ContainsFold(s.C(FieldCreatorOecuid), v))
	})
}

// CreatorTtuidEQ applies the EQ predicate on the "creator_ttuid" field.
func CreatorTtuidEQ(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldCreatorTtuid), v))
	})
}

// CreatorTtuidNEQ applies the NEQ predicate on the "creator_ttuid" field.
func CreatorTtuidNEQ(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.NEQ(s.C(FieldCreatorTtuid), v))
	})
}

// CreatorTtuidIn applies the In predicate on the "creator_ttuid" field.
func CreatorTtuidIn(vs ...string) predicate.TiktokCreator {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.In(s.C(FieldCreatorTtuid), v...))
	})
}

// CreatorTtuidNotIn applies the NotIn predicate on the "creator_ttuid" field.
func CreatorTtuidNotIn(vs ...string) predicate.TiktokCreator {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.NotIn(s.C(FieldCreatorTtuid), v...))
	})
}

// CreatorTtuidGT applies the GT predicate on the "creator_ttuid" field.
func CreatorTtuidGT(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.GT(s.C(FieldCreatorTtuid), v))
	})
}

// CreatorTtuidGTE applies the GTE predicate on the "creator_ttuid" field.
func CreatorTtuidGTE(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.GTE(s.C(FieldCreatorTtuid), v))
	})
}

// CreatorTtuidLT applies the LT predicate on the "creator_ttuid" field.
func CreatorTtuidLT(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.LT(s.C(FieldCreatorTtuid), v))
	})
}

// CreatorTtuidLTE applies the LTE predicate on the "creator_ttuid" field.
func CreatorTtuidLTE(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.LTE(s.C(FieldCreatorTtuid), v))
	})
}

// CreatorTtuidContains applies the Contains predicate on the "creator_ttuid" field.
func CreatorTtuidContains(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.Contains(s.C(FieldCreatorTtuid), v))
	})
}

// CreatorTtuidHasPrefix applies the HasPrefix predicate on the "creator_ttuid" field.
func CreatorTtuidHasPrefix(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.HasPrefix(s.C(FieldCreatorTtuid), v))
	})
}

// CreatorTtuidHasSuffix applies the HasSuffix predicate on the "creator_ttuid" field.
func CreatorTtuidHasSuffix(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.HasSuffix(s.C(FieldCreatorTtuid), v))
	})
}

// CreatorTtuidEqualFold applies the EqualFold predicate on the "creator_ttuid" field.
func CreatorTtuidEqualFold(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.EqualFold(s.C(FieldCreatorTtuid), v))
	})
}

// CreatorTtuidContainsFold applies the ContainsFold predicate on the "creator_ttuid" field.
func CreatorTtuidContainsFold(v string) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s.Where(sql.ContainsFold(s.C(FieldCreatorTtuid), v))
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.TiktokCreator) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.TiktokCreator) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.TiktokCreator) predicate.TiktokCreator {
	return predicate.TiktokCreator(func(s *sql.Selector) {
		p(s.Not())
	})
}
